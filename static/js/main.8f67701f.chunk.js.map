{"version":3,"sources":["components/TextForm.js","components/Navbar.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","Fragment","className","style","color","mode","htmlFor","BoxHead","value","backgroundColor","id","onChange","document","getElementById","rows","onClick","console","log","toLocaleUpperCase","type","innerHTML","split","length","Navbar","concat","href","Title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","toggleMode","Alerts","alert","msg","App","Mode","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","title","defaultProps","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.8f67701f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  function hanleClick() {\r\n    console.log(\"UpperCase box clicked\");\r\n    setText(text.toLocaleUpperCase());\r\n  }\r\n  function handleOnChange() {\r\n    // setText(event.target.value)\r\n    setText(document.getElementById(\"myBox\").value);\r\n  }\r\n  function Blank() {\r\n    setText((document.getElementById(\"myBox\").innerHTML = \"\"));\r\n  }\r\n  \r\n  const [text, setText] = useState(\"Enter your Text here\");\r\n  \r\n  // setText('New text');\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode===`dark`?`white`:`black`}}>\r\n        <label htmlFor=\"myBox\" className=\"form-label\">\r\n          {props.BoxHead}\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          style={{backgroundColor: props.mode==='dark'? 'Grey': 'white', color:props.mode=== 'dark'?'white': 'black'}}\r\n          id=\"myBox\"\r\n          onChange={handleOnChange}\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <button className=\"btn btn-primary\" onClick={hanleClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button type=\"reset\" className=\"btn btn-primary\" onClick={Blank}>\r\n          Reset\r\n        </button>\r\n       \r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={{color:props.mode===`dark`?`white`:`black`}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(' ').length} words, {text.length} characters</p>\r\n        <p>{0.008* text.split(' ').length} minutes read</p>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// TextForm.propTypes = {\r\n//   BoxHead: PropTypes.string,\r\n// };\r\n","//creating a react function based component -- rfc\r\nimport React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// Import proptypes -- impt\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.Title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.Title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/About\">\r\n                About\r\n              </Link> */}\r\n              <a className=\"nav-link\" href=\"/About\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className={`form-check-label text-${props.mode===`light`?`dark`:`light`}`} htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//This is used to define what type of data we want to send using props\r\n//Now if we make it PropTypes.string.isRequired then the value of this prop becomes mandatory and can never be undefined\r\n\r\n// Navbar.propTypes = {\r\n//   Title: PropTypes.string,\r\n// };\r\n\r\n//This says if we dont pass the prop value in the app.js then set this as default value\r\nNavbar.defaultProps = {\r\n  Title: \"TextUtils\",\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function Alerts(props) {\r\n   \r\n    \r\n  return (\r\n    \r\n      props.alert && <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport TextForm from \"./components/TextForm\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nexport default function App() {\n  const [Mode, setMode] = useState(\"light\"); //whther dark mode uis enabled or not\n  const [alert, setAlert] = useState(null);\n  function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  function toggleMode() {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light mode\";\n    }\n  }\n  return (\n    <>\n      <Navbar mode={Mode} toggleMode={toggleMode} />\n      <Alerts alert={alert} />\n      <TextForm/>\n    {/* <Router>\n      <div className=\"container my-3\">\n      <Routes>\n          <Route path=\"/about\" element={<About />}/>\n          <Route path=\"/\" element={<TextForm BoxHead=\"Write something here\" mode={Mode} />}/>\n            \n          \n      </Routes>\n      </div>\n    </Router> */}\n    </>\n  );\n}\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}